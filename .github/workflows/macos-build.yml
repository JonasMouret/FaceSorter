name: Build macOS app (Intel + ARM)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - runner: macos-13   # Intel x86_64
            py: "3.11"
            ort: "onnxruntime"
            zipname: "FaceSorter-macOS-x86_64.zip"
          - runner: macos-14   # Apple Silicon arm64
            py: "3.11"
            ort: "onnxruntime-silicon"
            zipname: "FaceSorter-macOS-arm64.zip"

    runs-on: ${{ matrix.runner }}
    env:
      MACOSX_DEPLOYMENT_TARGET: "11.0"
      # for Pillow-HEIF runtime
      DYLD_FALLBACK_LIBRARY_PATH: /usr/local/lib:/opt/homebrew/lib

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.py }}

      - name: Show arch and macOS
        run: |
          uname -m
          sw_vers -productVersion
          python -c "import platform; print('python:', platform.machine(), platform.platform())"

      - name: Install Homebrew deps (HEIC support)
        run: |
          brew update
          brew install libheif || true

      - name: Install project (from pyproject) + build tools
        run: |
          python -m pip install --upgrade pip wheel setuptools
          pip install .            # <-- installe facesorter et ses deps depuis pyproject.toml
          pip install ${{ matrix.ort }} pyinstaller

      - name: Download InsightFace models (buffalo_l)
        run: |
          mkdir -p insightface_home/models/buffalo_l
          curl -L -o buffalo_l.zip "https://github.com/deepinsight/insightface/releases/download/v0.7/buffalo_l.zip"
          unzip -o buffalo_l.zip -d insightface_home/models/

      # (facultatif) smoke test rapide de la CLI pour vérifier que l'import marche
      - name: Smoke test CLI
        run: |
          python -c "import facesorter, sys; print('facesorter version:', getattr(facesorter, '__version__', 'n/a'))"
          mkdir -p people input_photos output_photos
          # juste un appel à vide pour vérifier que le script se lance
          facesorter --help

      - name: Build with PyInstaller (.spec)
        run: |
          # Si tu as déplacé le .spec dans tools/, adapte le chemin :
          pyinstaller --noconfirm --clean tools/FaceSorter.spec

      - name: Check binary arch
        run: |
          file "dist/FaceSorter.app/Contents/MacOS/FaceSorter"

      - name: Zip app
        run: |
          cd dist
          ditto -c -k --sequesterRsrc --keepParent "FaceSorter.app" "${{ matrix.zipname }}"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.zipname }}
          path: dist/${{ matrix.zipname }}
